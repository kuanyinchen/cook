var express = require('express')  http = require('http') //匯入http核心模組 , path = require('path') //同上 , routes4users = require('./routes/users'); //匯入自己編寫的users路由模組var app = express();app.configure(function(){ app.set('port', process.env.PORT || 3000); app.set('views', __dirname + '/views'); //存放檢視的資料夾,和asp.net mvc類似用途 app.set('view engine', 'jade'); //類似於asp.net mvc的razor,不過jade語法不同,並且接近於coffeescript那樣採用縮排 app.use(express.favicon()); app.use(express.logger('dev')); app.use(express.bodyParser()); app.use(express.methodOverride()); app.use(app.router);});app.configure('development', function(){ app.use(express.errorHandler());});app.get('/users/:name', routes4users.users_getCollectionByName);
//類似於asp.net mvc中的路由,mvc下為:{controller}/{action}/{id},Node.js中用:字首為引數
//routes4users.users_getCollectionByName是我們要編寫的主要處理函式 http.createServer(app).listen(app.get('port'), function(){ console.log("Express server listening on port " + app.get('port'));});
